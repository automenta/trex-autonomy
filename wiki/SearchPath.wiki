#summary An overview of how T-REX tools search for files.

T-REX tools will search for named files of all kinds using a search path composed of 2 elements, defined by the following environment variables:
 * TREX_PATH - This is a ':' delimited list of directories that will be searched.
 * TREX_START_DIR - This is the location from which to begin the search for a file.

T-REX will find the first available instance of a file. It searches according to the following scheme:
 # Traverse up the directory tree from the start directory to a directory in the path.
 # Traverse the path in the order in which the directories are listed.

The above environment variables can be set directly in the user environment. However, T-REX provides additional support for setting these properties. TREX_PATH can be over-ridden by:
 * Setting trex/path as a ROS parameter before launching [Tools#trexrun trexrun].
 * Setting the include path in [NddlConfig NDDL.cfg], which will be obtained by searching the path based on the current environment variable settings.
 * Setting the include path in temp_nddl_gen.cfg, which will be obtained by searching the path based on the current environment variable settings. This is only used of no NDDL.cfg file is located.

The TREX_START_DIR environment variable can be over-ridden by setting trex/start_dir as a ROS parameter before launching [Tools#trexrun trexrun].

For example, suppose the following files exist in the file system: 
 * bar/a.foo
 * bar/bing/bing/a.foo
 * baz/b.foo

Assume TREX_PATH = "foo:bar/cfg:bar:baz" and TREX_START_DIR = bar/bing/bong. This yields the following search examples:
 * If the start directory is _bar/bing/bing/_, then a search for _a.foo_ will return: _bar/bing/bing/a.foo_.
 * If the start directory is _bar/bing_, then a search for _a.foo_ will return: _bar/a.foo_.
 * If the start directory is _bar/bing_, then a search _b.foo_ will return: _baz/b.foo_.





