#summary PlanWorks is a defunct debugging tool in EUROPA
= Introduction =
PlanWorks is a GUI tool for debugging partial plans generated by EUROPA in a specific database. It allows a user to visually inspect the following features:
 * Tokens in a partial plan
 * Constraint networks
 * ...

= Details =
== Usage in TREX ==
=== Enabling PlanWorks Output from TREX ===
{{{
DebugMessage::enableMatchingMsgs("","PlanWorks");
}}}

=== Disabling PlanWorks Output from TREX ===
{{{
DebugMessage::disableMatchingMsgs("","PlanWorks");
}}}

== PlanWorks Output ==
In the context of TREX, there exist many databases, so for each one, a separate log is created.

=== Files ===

=== File Formatting ===
==== .constraints ====
==== .objects ====
==== .ruleInstanceSlaveMap ====
==== .ruleInstaces ====
==== .tokens ====
This file contains all of the tokens in the system at this step.

The columns are:
{{{
token key
token type
slot id
slot index
writer id
0
1
token start key
token end key 
token duration key
token state key
predicate name
timeline key
timeline name
object key
parameter variable keys (colon-separated list)
slot order
}}}
An example line from a .tokens file:
{{{
27811 0 1000011 0 1249088328023 0 1 27816 27817 27814 27812 OpenDoor.Active 1303 open_door 27813 27825:27826:27833:27834:27835:27836:27837:27838:27839:27840:27841:27842:27843:27844:27845:27846:27847:27848:27849:27850:27851:27852:27853:27854:27855:27856:27857: 0
}}}
==== .variables ====


== Implementation in TREX ==
PlanWorks utilizes a EUROPA::SOLVERS::PlanWriter::PartialPlanWriter embedded in PLASMA to create output of the partial plans for debugging.

Inside of TREX::DbCore::HandleTickStart(), is the call:
{{{
TREX_INFO("PlanWorks", nameString() << m_assembly.exportToPlanWorks());
}}}
This calls TREX::Assembly::exportToPlanWorks(), which executes:
{{{
getPPW()->write();
}}}
Which writes out the data to disk from a TREX::DbWriter. The DbWriter fulfills the same function as the EUROPA::SOLVERS::PartialPlanWriter.