= Timelines and Tokens =
Consider a spacecraft travelling through deep space, tasked with taking pictures of specific targets. The spacecraft has an _engine_ which can be fired to alter its pose. It also has a _camera_ which is turned off when not in use. If the camera was previously off, it can require some warm up period before being ready. The spacecraft _attitude_ is either pointing at a specifc target, thus having a steady pose, or transitioning from one pose to another. There are 3 state variables of interest in this spacecraft scenario: *Engine*, *Camera*, and *Attitude*.  A _timeline_ captures the values of a state variable over time. The figure below illustrates timelines for each of the above state variables. Both the *Camera* and the *Engine* are _Off_ and the spacecraft is _PointingAt_ a target given by _D12_. The value of a state variable, specified with a _Token_, has temporal extent, which means it persists for some period of time. The temporal scope for a value is bounded by a start and end time. In the figure below, the start time of each token  is fixed, but the end time is not. This indicates uncertainty and/or ambivalence about when the current value will end. A _token_ includes a _predicate_ with a possibly empty set of parameters, in keeping with conventional [http://en.wikipedia.org/wiki/First-order_logic first-order logic] representations. The *Engine* can be _Off_ or it can be _Thrusting_ to a target pose. The *Camera* can be _Off_, _WarmingUp_, _Ready_, or _TakingPicture_ at some target pose. The spaceacraft *Attitude* is either _PointingAt_ a target pose, or _TurningTo_ a target pose.

[http://trex-autonomy.googlecode.com/svn/wiki/images/initial_state.png]
 

= Constraints =
Suppose the spacecraft should take a picture of a specific asteroid. While it is taking a picture of the asteroid, it should be pointing at it. This can be said for any target pose. Also, in order to prevent jitter in the image, it is critical that the engine is _Off_ while the shot is being taken. The figure below illustrates how the spacecraft timelines are filled out to accomodate this goal. It illustrates the values of timelines as they are expected to change, as well as the constraints between start times, end times and parameters. 

[http://trex-autonomy.googlecode.com/svn/wiki/images/partial_plan.png]

Note that the requirement that _while taking a picture, the engine must be off_ is expressed as a constraint from the *Camera* timeline to the *Engine* timeline, with precedence constraints between timepoints capturing the _while_ semantics. Also note the transition of the *Camera* timeline from *Off* to *TakePicture* must go through intermediate states to first warm up and then be ready. The goal also requires a change in vehicle attitude. The adjustment in attitude is co-temporal with thrusting the engine. This is expressed be equality constraints beteen the start and end times of the respective tokens.


